import telebot
import datetime
from random import randint
from PythonProject.Max_login import login
import os.path
from telebot import types
path = os.path.join("data_base", "Bot.txt")
path1 = os.path.join("data_base", "Bot.txt")
config = {
    "name": "Maxxxxxxxxxxxxxbot",
    "token": "5551701270:AAG0EHv0GiQlYbGXcND8HPnK_s6LfERpDvc"
}
max = telebot.TeleBot(config["token"])

@max.message_handler(commands=["start"])

def menu(massage):
    keybord = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_time = types.KeyboardButton('timeüïò')# –ö–Ω–æ–ø–∫–∞ —á–∞—Å—É
    button_calculator = types.KeyboardButton('calculatorüßÆ')# –ö–Ω–æ–ø–∫–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    button_text = types.KeyboardButton('textüìÑ')# –ö–Ω–æ–ø–∫–∞ —Ç–µ–∫—Å—Ç—É
    button_sumbolsnumers = types.KeyboardButton('sumbolsnumers1Ô∏è‚É£')# –ö–Ω–æ–ø–∫–∞ —Ä–∞—Ö—É—î —Å–∏–º–≤–æ–ª–∏
    button_happy_ticket = types.KeyboardButton('happy_ticketüé´')# –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞—î —â–∞—Å–ª–∏–π / –Ω–µ—â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç
    button_countword = types.KeyboardButton('countwordüìÉ')# ???
    button_file = types.KeyboardButton('fileüìÅ')# –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞—î —É —Ñ–∞–π–ª—ñ –¥–∞–Ω–Ω—ñ –ø—Ä–æ —Ç–µ–∫—Å—Ç
    button_sun = types.KeyboardButton('sunüåû')# –ö–Ω–æ–ø–∫–∞ –≤–∏–∑–Ω–∞—á–∞—î –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —á–∞—Å—É –Ω–∞—Ö–∏–ª —Å–æ–Ω—Ü—è
    button_text_maker = types.KeyboardButton('text_maker')
    keybord.add(button_time, button_calculator, button_sumbolsnumers, button_text, button_happy_ticket, button_countword, button_file, button_sun, button_text_maker)
    keybord111 = types.ReplyKeyboardMarkup(resize_keyboard=True)
    text = types.KeyboardButton('text')
    keybord.add(button_time)
    max.send_message(massage.chat.id, "–ú–µ–Ω—é:", reply_markup=keybord111)

@max.message_handler(content_types=['text'])
def start(message):
    if message.text == "text":
        pass
    if message.text == "start":
        max.send_message(message.chat.id, "–ú—ñ–π –±–æ—Ç –º–æ–∂–µ: –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏—Å—å –∑ —Ç–æ–±–æ—é —Ç–∞–∫–æ–∂ –º–æ–∂–µ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ (–Ø–∫ —Å–ø—Ä–∞–≤–∏)")
    if message.text == "timeüïò":
        max.send_message(message.chat.id, str(datetime.datetime.now()))# –í–∏–¥–∞—î —á–∞—Å
    if message.text == "calculatorüßÆ":
        action = max.send_message(message.chat.id, "Enter your action: ") # –û–±—á–∏—Å–ª—é—î —á–∏—Å–ª–∞
        max.register_next_step_handler(action, calculator)
    if message.text == "sumbolsnumers1Ô∏è‚É£":
        numberstext = max.send_message(message.chat.id, "Enter your text: ")# –í–∏–¥–∞—î —Å—É–º—É —É—Å—ñ—Ö —Å–∏–º–≤–æ–ª—ñ–≤
        max.register_next_step_handler(numberstext, numberscount)
    if message.text == "sunüåû":
        numbersun = max.send_message(message.chat.id, "Enter your time: ")# –≤–∏–∑–Ω–∞—á–∞—î –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —á–∞—Å—É –Ω–∞—Ö–∏–ª —Å–æ–Ω—Ü—è
        max.register_next_step_handler(numbersun, sun)
    # if message.text == "/count":
    #     count = max.send_message(message.chat.id, "Enter your text: ")
    #     max.register_next_step_handler(count, counts)
    if message.text == "textüìÑ":
        text = max.send_message(message.chat.id, "Enter your text: ")# —Ä–∞—Ö—É—î —Å–∏–º–≤–æ–ª–∏
        max.register_next_step_handler(text, count_symbols)
    if message.text == "happy_ticketüé´":
        texthappy = max.send_message(message.chat.id, "Enter your text: ")# –≤–∏–¥–∞—î —â–∞—Å–ª–∏–π / –Ω–µ—â–∞—Å–ª–∏–≤–∏–π –±—ñ–ª–µ—Ç
        max.register_next_step_handler(texthappy, happy)
    if message.text == "countwordüìÉ":
        word = max.send_message(message.chat.id, "Enter your word: ")# ???
        max.register_next_step_handler(word, worddef)
    if message.text == "fileüìÅ":
        word = max.send_message(message.chat.id, "Enter your word: ")# –≤–∏–¥–∞—î —É —Ñ–∞–π–ª—ñ –¥–∞–Ω–Ω—ñ –ø—Ä–æ —Ç–µ–∫—Å—Ç
        max.register_next_step_handler(word, filedef)
    if message.text == "/play":
        a = randint(1, 100)
        playtext = max.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å —Ü–∏—Ñ—Ä—É:")
    if message.text == "entry":
        word = max.send_message(message.chat.id, "Enter your password/login: ")
        max.register_next_step_handler(word, login)

# def game(massage):
#     a = randint(1,100)
#     for i in range(10):
#         b = int(massage.text)
#         if b == a:
#             max.send_message(massage.chat.id, f"–í–∏ –ø–µ—Ä–µ–º–æ–≥–ª–∏!  –í–∏—Ç—Ä–∞—á–µ–Ω–æ {i+1} —Å–ø—Ä–æ–±–∏ –¢–∞–∫ —Ü–µ {a}")
#             if b < a:
#                 max.send_message(massage.chat.id, "–í–∞—à–∞ —Ü–∏—Ñ—Ä–∞ –º–µ–Ω—å—à–∞")
#             if b > a:
#                 max.send_message(massage.chat.id, "–í–∞—à–∞ —Ü–∏—Ñ—Ä–∞ –±—ñ–ª—å—à–∞")
    # max.send_message(massage.chat.id, "lose")
# def counts(massage):
#     massagecount = massage.text.split()
#     massagecount2 = []
#     for i in massagecount:
#          massagecount2.append(int(i))
#         if
# def login(message, word):
#     users = Users.objects.all()
#     word1 = word.split("/")
#     loging = 0
#     for i in users:
#         if i.name == word1[1]:
#             if i.password == word1[0]:
#                 max.send_message(message.chat.id, f'You in account!!!')
#                 loging = "yes"
#             else:
#                 max.send_message(message.chat.id, f'Password Eror!!!')
def numberscount(massage):
    massagefor = []
    for i in massage.text:
        massagefor.append(int(i))
    max.send_message(massage.chat.id,  f'—Å—É–º–∞ —Ü–∏—Ñ—Ä {massage.text} = {str(sum(massagefor))}')
def happy(massage):
    sum1 = 0
    sum2 = 0
    mid = int(len(massage.text)/2)
    happy = massage.text[:mid]
    happy2 = massage.text[mid:]
    for i in happy:
        sum1 = sum1 + int(i)
    for a in happy2:
        sum2 = sum2 + int(a)
    if sum1 == sum2:
        max.send_message(massage.chat.id, "this a happy ticket")
    else:
        max.send_message(massage.chat.id, "this a not happy ticket")
def filedef(massage):
    file = open(path, "w")
    file1 = open(path, "r")
    word = massage.text.split()
    # for i in word:
    #     if len(i) > 7:
    #         file.write(f'{i}\n')
    file.write(f'{len(word)} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ \n')
    file.write(f'{len(massage.text)} –∫–æ–ª–∏—á–∏—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ \n')
    list_abc = ["q","r","w","t","p","s","d","f","g","h","j","k","l","z","x","c","v","b","n","m"]
    count = 0
    for i in massage.text:
        if i in list_abc:
            count = count+1
    file.write(f'{count} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≥–ª–∞—Å–Ω–∏—Ö –±—É–∫–≤ \n')
    list_abc = ["a","u","o","e","y","i",]
    count = 0
    for i in massage.text:
        if i in list_abc:
            count = count+1
    file.write(f'{count} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–ª–∞—Å–Ω–∏—Ö –±—É–∫–≤ \n')
    count2 = 0
    for i in massage.text:
        if i.isdigit():
            count2 = count2+1
    file.write(f'{count2} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä \n')
    list_abc2 = ["!", "?", ".", ","]
    count4 = 0
    for d in massage.text:
        if d in list_abc2:
            count4 = count4+1
    file.write(f'{count4} –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∏–ø–∏–Ω–∞–Ω–∏—è \n')
    file.close()
    max.send_document(massage.chat.id, open(path, "r"))
def worddef(massage):
    symbolsword = massage.text.split("/")
    max.send_message(massage.chat.id, str(symbolsword[0].count(symbolsword[1])))
def count_symbols(massage):
    symbols = len(massage.text)
    max.send_message(massage.chat.id, str(symbols))
def sun(message):
    sun1 = message.text.split(":")
    hours = int(sun1[0])
    minut = int(sun1[1])
    if 18<=hours<=24 or 0>=hours>6:
        max.send_message(message.chat.id, "–í —Ü–µ–π —á–∞—Å —Å–æ–Ω—Ü—è –Ω–µ –≤–∏–¥–Ω–æ")
    else:
        angle = (hours-6)*15 + minut*0.25
        max.send_message(message.chat.id, f'–Ω–∞—Ö–∏–ª —Å–æ–Ω—Ü—è {angle} –≥—Ä–∞–¥—É—Å—ñ–≤')
def calculator(message): # message.text = 2+2
    a = message.text
    b = ["+", "-", "*", "/"]
    for i in b:
        if i in a:
            c = a.split(i)
            if i == "+":
                max.send_message(message.chat.id, f'{c[0]}+{c[1]}={int(c[0])+int(c[1])}')
            elif i == "-":
                max.send_message(message.chat.id, f'{c[0]}-{c[1]}={int(c[0])-int(c[1])}')
            elif i == "*":
                max.send_message(message.chat.id, f'{c[0]}*{c[1]}={int(c[0])*int(c[1])}')
            elif i == "/":
                if c[1] == "0":
                    max.send_message(message.chat.id, "–ù–∞ –Ω—É–ª—å –Ω–µ–º–∞–∂–Ω–∞ –¥—ñ–ª–∏—Ç–∏")
                else:
                    max.send_message(message.chat.id, f'{c[0]}/{c[1]}={int(c[0])/int(c[1])}')


# if message.text == "/name":
    #     max.send_message(message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—î —ñ–º'—è")
    #     @max.message_handler(content_types=["text"])
    #     def name(message):
    #         if message.text.lower == ""
@max.message_handler(content_types=["text"])
def get_text(message):
    if message.text.lower() == "–ø—Ä–∏–≤—ñ—Ç" or message.text.lower() == "hello" or message.text.lower() == "hi" or message.text.lower() == "üññ":
        max.send_message(message.chat.id, "–ü—Ä–∏–≤—ñ—Ç –°–µ—Ä–≥—ñ–π! –í—ñ—Ç–∞—é —Ç–µ–±–µ –∑ –ø—Ä–∏—î–¥–Ω–∞–¥–Ω—è –∑ —Å—ñ–º—î—é")
    if message.text.lower() == "—è–∫ —Å–ø—Ä–∞–≤–∏" or message.text.lower() == "how do you do":
        max.send_message(message.chat.id, "OK")
    if message.text.lower() == "—è–∫ —Ç–µ–±–µ –∑–≤–∞—Ç–∏" or message.text.lower() == "what is your name":
        max.send_message(message.chat.id, "My name Max")
        max.send_message(message.chat.id, "nice to meet you")
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–∏—à–µ—Ç –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 14:30, –º—ã –≤—ã–≤–æ–¥–∏–º —É–≥–æ–ª —Å–æ–ª–Ω—Ü–∞ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ 06:00 - 0 –≥—Ä–∞–¥—É—Å–æ–≤ , 18:00 - 180 –≥—Ä–∞–¥—É—Å–æ–≤



max.polling(none_stop=True,interval=0)